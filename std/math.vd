import std/core;

pragma generate_std_math_builtins;

template <T: type>
func gcd(a: T, b: T) -> T {
	while b != 0 {
		const t = b;
		b = a % b;
		a = t;
	}
	return abs!<T>(a);
}

template <T: type>
func lcm(a: T, b: T) -> T {
	if a == 0 || b == 0 {
		return 0;
	}

	return abs!<T>(a) * abs!<T>(b) / gcd!<T>(a, b);
}
