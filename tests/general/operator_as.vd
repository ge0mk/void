import std/core;

struct Foo {
	func constructor(this: &&Foo) -> void = default;
	func constructor(this: &&Foo, other: Foo) -> void = default;
	func destructor(this: &&Foo) -> void = default;

	operator =(this: &&Foo, other: Foo) -> void = default;

	template <T: type>
	operator as(this: Foo) -> int {
		return 0;
	}

	template <T: type = int>
	operator as(this: Foo) -> int {
		return 42;
	}
}

func main() -> void {
	assert(Foo() as int == 42);
}
